name: CI
on: [push, pull_request_target]

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: "sqlite3::memory:"
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      WITH_COVERAGE: true
      DISABLE_SPRING: 1


    # services:
      # postgres:
      #   image: postgres:latest
      #   ports: ['5432:5432']
      #   options: >-
      #     --health-cmd pg_isready
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 5
      #   env:
      #     POSTGRES_PASSWORD: password

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.1

      - name: Install PostgreSQL client
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Cache Ruby Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle Install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Prepare Database
        run: |
          bundle exec rails db:prepare

      - name: Run Cucumber
        run: |
          bundle exec cucumber RAILS_ENV=test

      - name: Run Cucumber and Unit Tests
        run: |
          if [ "$RAILS_ENV" = "development" ]; then
            bundle exec cucumber RAILS_ENV=test
            bundle exec rails test
          else
            bundle exec rails test
            bundle exec rails test -e actions test/models/onibus_test.rb
            bundle exec rails test -e actions test/models/rotum_test.rb
            bundle exec rails test -e actions test/models/motoristum_test.rb
  

